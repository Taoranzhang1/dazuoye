name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check code formatting with Black
      run: |
        black --check app.py test_app.py
        
    - name: Lint code with Ruff
      run: |
        ruff check app.py test_app.py
        
    - name: Lint code with Flake8
      run: |
        flake8 app.py test_app.py
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    env:
      APP_NAME: Python程序
      GREETING: 欢迎
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest test_app.py -v
  
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Create .env file
      run: |
        echo "APP_NAME=Python程序" > .env
        echo "GREETING=欢迎" >> .env
        
    - name: Build Docker image
      run: |
        docker build -t dazuoye-app .
        
    - name: Test Docker image
      run: |
        docker run --rm dazuoye-app python -c "import app; print('Docker镜像测试成功')"